version: 2

jobs:
  build:
    docker:
      - image: circleci/python:latest
        # environment:
        #   aws_access_key_id: AKIAZ332BW4JK4JM2BMC
        #   aws_secret_access_key: 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
    steps:
      - run: echo "build"

  deploy: &deploy-env
    docker:
      - image: circleci/python:latest
    
    working_directory: ~/param-store

    steps:
      - checkout 
      - setup_remote_docker

      # - run: echo "deploy"
      # - run: bash ./scripts/install_terraform.sh
      # - run: bash ./scripts/apply_${tag}.sh
      # - run: echo "deployed successfully"

      - run: echo `deploy for ${tag} environment`
      - run: bash ./scripts/install_terraform.sh
      - run: bash ./scripts/apply_${tag}.sh
      # - run: bash terraform -v
      # - run: bash terraform init
      # - run: bash ./scripts/terraform_plan.sh
      # - run: bash ./scripts/terraform_apply.sh
      - run: echo `deployed successfully in ${tag} environment`

  deploy_stage:
    <<: *deploy-env
    environment:
      tag: dev



  deploy_qa:
    <<: *deploy-env
    environment:
      tag: qa
  
  deploy_uat:
    <<: *deploy-env
    environment:
      tag: uat

  deploy_prod:
    <<: *deploy-env
    environment:
      tag: prod

workflows:
  version: 2

  stage_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - deploy_stage:
          filters:
            branches:
              only: main
          requires:
            - build 
            